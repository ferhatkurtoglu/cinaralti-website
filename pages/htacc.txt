# Güvenlik ayarları
Options -Indexes
ServerSignature Off

# PHP hata raporlamasını kapat
php_flag display_errors off

# Karakter seti
AddDefaultCharset UTF-8

# MIME türleri
<IfModule mod_mime.c>
    AddType application/javascript .js
    AddType text/css .css
    AddType image/svg+xml .svg
    AddType application/font-woff .woff
    AddType application/font-woff2 .woff2
</IfModule>

# Sıkıştırma
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>

# Önbellek kontrolü
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType application/x-javascript "access plus 1 month"
    ExpiresByType text/html "access plus 1 week"
    ExpiresByType application/xhtml+xml "access plus 1 week"
</IfModule>

# URL yönlendirmeleri
RewriteEngine On
RewriteBase /cinaralti-website/public/

# www olmadan erişimi www'li versiyona yönlendir
RewriteCond %{HTTP_HOST} !^www\. [NC]
RewriteRule ^(.*)$ http://www.%{HTTP_HOST}/$1 [R=301,L]

# HTTPS yönlendirmesi
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# PHP dosyalarına doğrudan erişimi engelle
RewriteCond %{THE_REQUEST} ^[A-Z]{3,}\s([^.]+)\.php [NC]
RewriteRule ^ %1 [R=301,L]

# Mevcut dosya veya dizin kontrolü
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f

# Ana yönlendirme
RewriteRule ^(.*)$ index.php?url=$1 [QSA,L]

# XAMPP dashboard yönlendirmesini engelle
RewriteCond %{REQUEST_URI} ^/dashboard/
RewriteRule ^(.*)$ - [F,L]

# RewriteCond %{REQUEST_FILENAME} !-f
# RewriteCond %{REQUEST_FILENAME} !-d

# RewriteRule ^(.*)$ index.php [QSA,L]

# RewriteRule ^([^/]+)/?$ $1.php [L]

# Açıklama:
#  ^([^/]+)/?$ ifadesi şu anlama gelir:
#   - ([^/]+): / karakteri dışında herhangi bir grup (yani 'about', 'contact' vs.)
#   - /?     : Sondaki / karakteri opsiyonel olabilir (yani /about veya /about/ fark etmez)
#   - $1.php : Eşleşen grupun .php versiyonunu yükle (about -> about.php)
# [L]        : Bu kural eşleştiğinde diğer kurallara bakma (Last Rule).

<IfModule mod_rewrite.c>

RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d

RewriteRule ^(.*)$ index.php [QSA,L]

RewriteRule ^([^/]+)/?$ $1.php [L]

</IfModule> 


--------------------------------------------------------------


<?php
// Hata raporlamayı başlat
error_reporting(E_ALL);
ini_set('display_errors', 0);

// Oturum başlat
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

// Temel dosyaları dahil et
require_once __DIR__ . '/../config/config.php';

// CSRF token kontrolü
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        die('CSRF token doğrulaması başarısız!');
    }
}

// URL işleme
$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);
$basePath = BASE_URL;

if (strpos($uri, $basePath) === 0) {
    $baseLength = strlen($basePath);
    $uri = substr($uri, $baseLength);
}

$uri = rtrim($uri, '/');
if ($uri === '') {
    $uri = '/';
}

// Sayfa yönlendirmeleri
$routes = [
    '/' => 'home.php',
    '/home' => 'home.php',
    '/about' => 'about.php',
    '/video' => 'video.php',
    '/blog' => 'blog.php',
    '/contact' => 'contact.php',
    '/contact-ank' => 'contact-ank.php',
    '/contact-ist' => 'contact-ist.php',
    '/contact-deu' => 'contact-deu.php',
    '/donate' => 'donate.php',
    '/blog-details' => 'blog-details.php',
    '/faq' => 'faq.php',
    '/career' => 'career.php',
    '/career-details' => 'career-details.php'
];

// Header'ı yükle
require_once __DIR__ . '/../includes/header.php';

// Sayfayı yükle
if (isset($routes[$uri])) {
    $page = $routes[$uri];
    $pagePath = __DIR__ . '/../pages/' . $page;
    
    if (file_exists($pagePath)) {
        // Cache kontrolü
        $cacheKey = 'page_' . md5($uri);
        $cachedContent = get_cache($cacheKey);
        
        if ($cachedContent !== false) {
            echo $cachedContent;
        } else {
            ob_start();
            require_once $pagePath;
            $content = ob_get_clean();
            set_cache($cacheKey, $content);
            echo $content;
        }
    } else {
        require_once __DIR__ . '/../pages/404.php';
    }
} else {
    require_once __DIR__ . '/../pages/404.php';
}

// Footer'ı yükle
require_once __DIR__ . '/../includes/footer.php';
